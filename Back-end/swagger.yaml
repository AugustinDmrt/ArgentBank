openapi: 3.0.0
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
servers:
  - url: http://localhost:3001/api/v1
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      requestBody:
        description: Login Payload
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        "200":
          description: Login Successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      requestBody:
        description: Signup Payload
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Signup Successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - BearerAuth: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - BearerAuth: []
      tags:
        - User Module
      summary: Update User Profile
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      requestBody:
        description: Update user profile attributes
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfile"
      responses:
        "200":
          description: User profile updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/accounts/{accountId}:
    get:
      tags:
        - User Transactions
      summary: User's Account
      description: API for getting all accounts
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          description: User's account ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Transaction retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transactions"
        "400":
          description: Bad request. User ID must be an integer and larger than 0.
        "500":
          description: Internal Server Error
  /user/accounts/{accountId}/transactions:
    get:
      tags:
        - User Transactions
      summary: Transactions
      description: API for getting all transactions for the current month
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          description: User's account ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Transaction retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transactions"
        "400":
          description: Bad request. User ID must be an integer and larger than 0.
        "500":
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionsId}:
    get:
      tags:
        - User Transactions
      summary: Transaction details
      description: API for getting a single transaction details
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          description: User's account ID
          required: true
          schema:
            type: integer
        - in: path
          name: transactionsId
          description: Transaction's ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Transaction retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transactions"
        "400":
          description: Bad request. User ID/ transaction ID must be an integer and larger than 0.
        "500":
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionsId}/category:
    put:
      tags:
        - User Transactions
      summary: Update an existing transaction (category)
      description: API for updating a transaction's category
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          description: User's account ID
          required: true
          schema:
            type: integer
        - in: path
          name: transactionsId
          description: Transaction's ID
          required: true
          schema:
            type: integer
      requestBody:
        description: Update transaction's information
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionsUpdateCategory"
      responses:
        "200":
          description: Transaction updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transactions"
        "400":
          description: Bad request. User ID/ transaction ID must be an integer and larger than 0.
        "500":
          description: Internal Server Error
  /user/accounts/{accountId}/transactions/{transactionsId}/notes:
    put:
      tags:
        - User Transactions
      summary: Update an existing transaction (notes)
      description: API for updating transaction's notes
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          description: User's account ID
          required: true
          schema:
            type: integer
        - in: path
          name: transactionsId
          description: Transaction's ID
          required: true
          schema:
            type: integer
      requestBody:
        description: Update transaction's information
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionsUpdateNotes"
      responses:
        "200":
          description: Transaction updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transactions"
        "400":
          description: Bad request. User ID/ transaction ID must be an integer and larger than 0.
        "500":
          description: Internal Server Error
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          description: user email
        password:
          type: string
          description: user password
        firstName:
          type: string
          description: user first name
        lastName:
          type: string
          description: user last name
    Login:
      type: object
      properties:
        email:
          type: string
          description: user email
        password:
          type: string
          description: user password
    ApiResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          type: object
          properties:
            id:
              type: string
            email:
              type: string
    LoginResponse:
      type: object
      properties:
        token:
          type: string
    UserProfile:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
    Transactions:
      type: object
      properties:
        transactionsId:
          type: integer
          format: int64
        date:
          type: string
        description:
          type: string
        amount:
          type: number
        currency:
          type: string
        type:
          type: string
        category:
          type: string
        notes:
          type: string
    TransactionsUpdateCategory:
      type: object
      properties:
        category:
          type: string
    TransactionsUpdateNotes:
      type: object
      properties:
        notes:
          type: string
